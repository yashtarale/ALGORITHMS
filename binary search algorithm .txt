Write a program to implement binary search algorithm using recursion
Algorithm
binarySearchR(a,low,high,item)
    local int mid;
    mid ← floor((low+high) / 2)
    if low > high then
        return false
    if a[mid] == item then
        return mid
    else if a[mid] > item then
        binarySearchR(a, low, mid-1, item)
    else
        binarySearchR(a, mid+1, high, item)
    end
Program
#include <stdio.h>

int binarySearch(int array[], int x, int low, int high) {
  if (high >= low) {
    int mid = low + (high - low) / 2;

    // If found at mid, then return it
    if (array[mid] == x)
      return mid;

    // Search the left half
    if (array[mid] > x)
      return binarySearch(array, x, low, mid - 1);

    // Search the right half
    return binarySearch(array, x, mid + 1, high);
  }

  return -1;
}

int main(void) {
  int array[] = {3, 4, 5, 6, 7, 8, 9};
  int n = sizeof(array) / sizeof(array[0]);
  int x = 4;
  int result = binarySearch(array, x, 0, n - 1);
  if (result == -1)
    printf("Not found");
  else
    printf("Element is found at index %d", result);
}