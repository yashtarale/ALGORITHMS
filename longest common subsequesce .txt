implement longest common subsequesce problem using dynamic programming
Algorithm
[c[i,j] maximum length array]

m = length(x)
n = length(y)

for i = 0 to m do
    c[i][0] = 0
end_for

for j = 0 to m do
    c[0][j] = 0
end_for

for i = 1 to m do
    for j = 1 to n do
        if x[i] = y[i] then
            c[i,j] = c[i-1,j-1] + 1
        else if c[i-1,j] >= c[i,j-1] then
            c[i,j] = c[i-1,j]
        else
            c[i,j] = c[i,j-1]
        end_if
    end_for
end_for
return c and b
Program
#include<stdio.h>
#include<string.h>
int i,j,m,n,c[20][20];
char x[20],y[20],b[20][20];
void lcs()
{
    m=strlen(x);
    n=strlen(y);
    for(i=0;i<=m;i++)
        c[i][0]=0;
    for(i=0;i<=n;i++)
        c[0][i]=0;
                    
    //c, u and l denotes cross, upward and downward directions respectively
    for(i=1;i<=m;i++)
        for(j=1;j<=n;j++)
        {
            if(x[i-1]==y[j-1])
            {
                c[i][j]=c[i-1][j-1]+1;
                b[i][j]='c';
            }
            else if(c[i-1][j]>=c[i][j-1])
            {
                c[i][j]=c[i-1][j];
                b[i][j]='u';
            }
            else
            {
                c[i][j]=c[i][j-1];
                b[i][j]='l';
            }
        }
}
void print(int i,int j)
{
    if(i==0 || j==0)
        return;
    if(b[i][j]=='c')
    {
        print(i-1,j-1);
        printf("%c",x[i-1]);
    }
    else if(b[i][j]=='u')
        print(i-1,j);
    else
        print(i,j-1);
}
int main()
{
    printf("Enter 1st sequence:");
    scanf("%s",x);
    printf("Enter 2nd sequence:");
    scanf("%s",y);
    printf("\nThe Longest Common Subsequence is ");
    lcs();
    print(m,n);
    return 0;
}





Enter 1st sequence:aggtab
Enter 2nd sequence:gxtxyab

The Longest Common Subsequence is gtab
